// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Users{
  userId      String      @id @default(uuid())
  username    String      @unique
  email       String      @unique
  password    String   
  avatar      String?
  bio         String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  posts       Posts[]
  comments    Comments[]
  likes       Likes[]
}

model Posts{
  postId      String      @id @default(uuid())
  user        Users       @relation(fields: [userId], references: [userId], onDelete: NoAction, onUpdate: NoAction)
  userId      String
  content     String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  comments    Comments[]
  likes       Likes[]
}

model Comments{
  commentId   String      @id @default(uuid())
  post        Posts       @relation(fields: [postId], references: [postId], onDelete: NoAction, onUpdate: NoAction)
  postId      String
  user        Users       @relation(fields: [userId], references: [userId], onDelete: NoAction, onUpdate: NoAction)
  userId      String
  content     String
  votes       Votes[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Likes{
  likeId      String      @id @default(uuid())
  post        Posts       @relation(fields: [postId], references: [postId], onDelete: NoAction, onUpdate: NoAction)
  postId      String
  user        Users       @relation(fields: [userId], references: [userId], onDelete: NoAction, onUpdate: NoAction)
  userId      String
  createdAt   DateTime    @default(now())
}

model Votes{
  voteId      String      @id @default(uuid())
  comment     Comments    @relation(fields: [commentId], references: [commentId], onDelete: NoAction, onUpdate: NoAction)
  commentId   String
  vote        Boolean 
  createdAt   DateTime    @default(now())     
}